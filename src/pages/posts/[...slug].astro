---
// Import necessary utilities

import { getCollection } from 'astro:content';
import MarkdownPostLayout from '../../layouts/MarkdownPostLayout.astro';


export async function getStaticPaths() {
  const blogEntries = await getCollection('posts');
  return blogEntries.map(entry => ({
    params: { slug: entry.slug }, props: { entry },
  }));
}

const { entry } = Astro.props;
const { Content } = await entry.render();

// Fetching posts and sorting them
const allPosts = (await getCollection('posts'))
  .sort((a, b) => new Date(b.data.pubDate).getTime() - new Date(a.data.pubDate).getTime());

const findCurrentPostIndex = (slug: string) => {
    return allPosts.findIndex(post => post.slug === slug);
};

const fullSlug = Astro.url.pathname; 
const currentSlug = fullSlug.split('/').pop() || '';
const currentIndex = findCurrentPostIndex(currentSlug);
const previousPost = allPosts[currentIndex - 1];
const nextPost = allPosts[currentIndex + 1];
---

<MarkdownPostLayout frontmatter={entry.data}>
  
  <Content />

  <div class="w-full md:w-3/4 lg:w-1/2 mx-auto text-center">
    {previousPost && (
      <a href={`/posts/${previousPost.slug}`} class="inline-block text-left text-blue-500 hover:text-blue-700 mr-4">
        ⬅️ Previous: {previousPost.data.title}
      </a>
    )}

    {nextPost && (
      <a href={`/posts/${nextPost.slug}`} class="inline-block text-right text-blue-500 hover:text-blue-700">
        Next: {nextPost.data.title} ➡️
      </a>
    )}
  </div>

</MarkdownPostLayout>
